{"version":3,"sources":["Signup.js","App.js","reportWebVitals.js","index.js"],"names":["App","form","Form","useForm","React","createElement","className","style","width","margin","onFinish","async","response","axios","post","values","data","success","message","error","Item","name","rules","required","Input","placeholder","prefix","UserOutlined","type","MailFilled","Password","LockFilled","dependencies","hasFeedback","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Button","htmlType","class","href","Signup","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iTA2FeA,MArFHA,KACV,MAAOC,GAAQC,IAAKC,UAkBpB,OACEC,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAAA,OAAKC,UAAU,KAAKC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,eAC/CL,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAACH,IAAI,CAACD,KAAMA,EAAMS,SApBPC,UACf,IACE,MAAMC,QAAiBC,IAAMC,KAAK,+BAAgCC,GAC9DH,EAASI,KAAKC,QAChBC,IAAQD,QAAQL,EAASI,KAAKE,SAG9BA,IAAQC,MAAMP,EAASI,KAAKE,SAE9B,MAAOC,GAGPD,IAAQC,MAAM,mDASVf,IAAAC,cAACH,IAAKkB,KAAI,CACRC,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAML,QAAS,kCAG7Bd,IAAAC,cAACmB,IAAK,CAACC,YAAY,YAAYC,OAAQtB,IAAAC,cAACsB,IAAY,SAEtDvB,IAAAC,cAACH,IAAKkB,KAAI,CACRC,KAAK,QACLC,MAAO,CAAC,CAAEC,UAAU,EAAML,QAAS,8BAEnCd,IAAAC,cAACmB,IAAK,CACJI,KAAK,QACLH,YAAY,WACZC,OAAQtB,IAAAC,cAACwB,IAAU,SAGvBzB,IAAAC,cAACH,IAAKkB,KAAI,CACRC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAML,QAAS,iCAEnCd,IAAAC,cAACmB,IAAMM,SAAQ,CACbL,YAAY,oBACZC,OAAQtB,IAAAC,cAAC0B,IAAU,SAGvB3B,IAAAC,cAACH,IAAKkB,KAAI,CACRC,KAAK,kBACLW,aAAc,CAAC,YACfC,aAAW,EACXX,MAAO,CACL,CAAEC,UAAU,EAAML,QAAS,iCAC3BgB,IAAA,IAACC,cAAEA,GAAeD,EAAA,MAAM,CACtBE,UAASA,CAACC,EAAGC,IACNA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,IAAIC,MAAM,oCAHHF,QAAQG,cASvBtC,IAAAC,cAACmB,IAAMM,SAAQ,CAACL,YAAY,sBAE9BrB,IAAAC,cAACH,IAAKkB,KAAI,KACRhB,IAAAC,cAACsC,IAAM,CAACf,KAAK,UAAUgB,SAAS,SAAStC,UAAU,KAAI,YAK3DF,IAAAC,cAAA,OAAKwC,MAAM,SAAQ,4BACQzC,IAAAC,cAAA,KAAGyC,KAAK,kBAAiB,aCvE7C9C,MARf,WACE,OACEI,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAC0C,EAAM,QCIEC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAKnB,IAAiD,IAAhDqB,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASzB,EACpEqB,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5D,IAAAC,cAACD,IAAM6D,WAAU,KACf7D,IAAAC,cAACL,EAAG,QAORgD","file":"static/js/main.7ef84b44.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\n//import \"antd/dist/antd.css\";\nimport { UserOutlined, MailFilled, LockFilled } from \"@ant-design/icons\";\n\nconst App = () => {\n  const [form] = Form.useForm();\n\n  const onFinish = async (values) => {\n    try {\n      const response = await axios.post(\"http://localhost:5007/signup\", values);\n      if (response.data.success) {\n        message.success(response.data.message);\n        // Navigate to login or another page\n      } else {\n        message.error(response.data.message);\n      }\n    } catch (error) {\n      //console.error(error);\n\n      message.error(\"An error occurred while registering the user\");\n    }\n  };\n\n  return (\n    <div className=\"whole\">\n      <div className=\"sc\" style={{ width: 300, margin: \"100px auto\" }}>\n        <h2>Signup</h2>\n        <Form form={form} onFinish={onFinish}>\n          <Form.Item\n            name=\"fullName\"\n            rules={[\n              { required: true, message: \"Please input your full name!\" },\n            ]}\n          >\n            <Input placeholder=\"Full Name\" prefix={<UserOutlined />} />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your email!\" }]}\n          >\n            <Input\n              type=\"email\"\n              placeholder=\"Email ID\"\n              prefix={<MailFilled />}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your password!\" }]}\n          >\n            <Input.Password\n              placeholder=\"Create a Password\"\n              prefix={<LockFilled />}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"confirmPassword\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              { required: true, message: \"Please confirm your password!\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(\"The two passwords do not match!\")\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password placeholder=\"Confirm Password\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"b\">\n              Signup\n            </Button>\n          </Form.Item>\n        </Form>\n        <div class=\"hello\">\n          Already have an account? <a href=\"www.google.com\">login</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","//import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Signup from \"./Signup\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Signup />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}